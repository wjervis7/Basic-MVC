// <auto-generated />
using System;
using EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EntityFramework.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200723174936_CreateUserAndTaskTables")]
    partial class CreateUserAndTaskTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6");

            modelBuilder.Entity("EntityFramework.Entities.Task", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TaskId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("FK_User_isassigned_Tasks")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("Modified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id")
                        .HasName("PK_TaskId");

                    b.HasIndex("FK_User_isassigned_Tasks");

                    b.ToTable("Task");
                });

            modelBuilder.Entity("EntityFramework.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserId")
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id")
                        .HasName("PK_UserId");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("UX_User_Email");

                    b.ToTable("User");
                });

            modelBuilder.Entity("EntityFramework.Entities.Task", b =>
                {
                    b.HasOne("EntityFramework.Entities.User", "Assignee")
                        .WithMany("AssignedTasks")
                        .HasForeignKey("FK_User_isassigned_Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
